<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ios开发 | Mae Blog]]></title>
  <link href="http://zhouhongmeiblog.github.io/blog/categories/ioskai-fa/atom.xml" rel="self"/>
  <link href="http://zhouhongmeiblog.github.io/"/>
  <updated>2014-08-28T11:01:30+08:00</updated>
  <id>http://zhouhongmeiblog.github.io/</id>
  <author>
    <name><![CDATA[maebook]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 测试解决方案]]></title>
    <link href="http://zhouhongmeiblog.github.io/blog/2014/07/03/distribute-app/"/>
    <updated>2014-07-03T14:10:19+08:00</updated>
    <id>http://zhouhongmeiblog.github.io/blog/2014/07/03/distribute-app</id>
    <content type="html"><![CDATA[<p><img src="/images/2014/07/03/iOS_Test.png" alt="image" /></p>

<!--more-->


<h3>App内测（Ad-Hoc）</h3>

<p>利用企业级开发证书和提供简单网页服务器搭建文件以及相关技术文档，把文件上传到您的网站，就可以是越狱和非越狱用户在iphone或者ipad上在线直接安装APP软件!</p>

<h4>发布流程：</h4>

<ul>
<li><p>设置签名</p>

<p>利用developer profile或者adhoc distribution profile签名app，注意，不能使用distribution profile方式签名，经过测试，是无法安装的。其中原因个人认为developer profile和adhoc distribution profile都可以指定设备，跟之前了解到的，个人开发者证书只能在100个设备中实现无线安装是一致的。</p></li>
<li><p>生成arichive</p>

<p>菜单：product->build for->arichiving，然后product->archive，完成后可以在organizer中看到生成的arichive。</p></li>
<li><p>生成ipa</p>

<p>选择刚刚生成的arichive，点击“Distribute&hellip;&ldquo;，弹出如下图界面，选择第二个：</p>

<p><img src="/images/2014/07/03/test.png" alt="image" /></p>

<p>选择后点“next”，设置相关参数，如下图：</p>

<p><img src="/images/2014/07/03/test1.png" alt="image" /></p>

<ul>
<li>一定要勾选“save for enterprise distribution”，简单解释一下各个参数。</li>
<li>application url,是生成的ipa在服务器的位置；title是安装过程中出现的标题；subtitle暂时不清楚做何用处；large image url 和 smal image url是 安装过程中出现的图标。</li>
<li>点击保存，将生成两个文件：myApp.ipa和myApp.plist。</li>
</ul>
</li>
<li><p>服务器部署</p>

<p>将myApp.ipa和myApp.plist部署到自己服务器，同时在服务器生成一个html文件，目的是点击后打开一个链接，这样ios设备就会执行指令自动安装app了。</p>

<p>mac电脑搭建服务器：</p>

<ul>
<li><p>在mac电脑找到服务器的路径</p>

<p><img src="/images/2014/07/03/test2.png" alt="image" /></p></li>
<li><p>打开Documents如下：</p>

<p><img src="/images/2014/07/03/test3.png" alt="image" /></p></li>
<li><p>把三个文件放到Documents就可以了：</p>

<p><img src="/images/2014/07/03/test4.png" alt="image" /></p></li>
<li><p>在终端输入如下命令行：</p>

<p><img src="/images/2014/07/03/test5.png" alt="image" /></p></li>
<li><p>在网页上输入<code>http://您电脑ip/xxx.html</code>,就OK了</p></li>
</ul>


<p>在html要打开连接内容地址：</p>

<pre><code>itms-services://?action=download-manifest&amp;url=http://192.168.5.7:8080/myApp.plist
</code></pre></li>
</ul>


<p> <strong>说明</strong></p>

<ul>
<li>无需iTunes，无线发布iOS App</li>
<li>不用设备授权即可直接安装，并且不限设备上限</li>
</ul>


<h3>TestFlight</h3>

<p>Testflight是移动团队必备的测试工具</p>

<h4>发布流程:</h4>

<ul>
<li>首先，需要在<a href="https://testflightapp.com">https://testflightapp.com</a>上注册一个账号</li>
<li>然后创建一个team（项目）后邀请一个email</li>
<li>对方在手机上使用safari打开email里的邀请链接，注册一个账号，或登录。对方在手机上一步一步继续按照提示，会要求在手机的设置里安装一个证书。最后这样就是接受了要求。</li>
<li>而你的email里，或在控制面板上可以知道对方的串号。</li>
<li>接着在开发者账号里添加这个串号，重新打包ipa。</li>
<li>在TestFlight的Build界面update，上传这个ipa，并且选择相应的user，选择更新。</li>
<li>最后对方在手机上就可以直接收到提示有新的app，点击安装即可。</li>
</ul>


<p><strong>说明</strong></p>

<ul>
<li>TestFlight可以收集测试过程中的Crash log，出现的bug，以及测试人员的反馈</li>
<li>方便在于省却了测试员和客户的繁琐操作，但程序员的任务还是一样多</li>
<li>User会有两种角色，一种是Developer，一种是test。test就是只能安装app，而Developer可以更新新的app</li>
<li>越狱的手机是无法通过TestFlight安装app的</li>
</ul>


<h3>FIR.IM</h3>

<p>FIR是一个免费App托管平台, 全名 Fly It Remotely. 可以2步简单发布应用程序, 极大简化了App内测(Ad-Hoc)的过程.</p>

<h4>发布流程：</h4>

<ul>
<li>将安装包拖拽至发布平台 (最大支持 100MB app 文件)</li>
<li>告诉测试人员对应生成的短链地址 (可自定义，同一个 App，有更新也会保持同一个地址，除非你想改动)，然后他们就可直接下载应用安装到手机上了</li>
</ul>


<p><strong>说明</strong></p>

<ul>
<li>开发者也可在手机上打开 FIR 主页，直接提交已经上线至 App Store 的应用链接，上传成功后也会显示 App 的基本信息，包括版本、图标、更新日期等</li>
<li>测试人员也不用去下个专门获取 UDID 的应用，直接用 Safari 打开 fir.im 主页就可以了</li>
</ul>


<h3>蒲公英</h3>

<h4>发布流程：</h4>

<ul>
<li>将应用上传到网站，生成安装链接和二维码</li>
<li>用户在手机上打开安装链接，或扫码二维码，即可开始安装</li>
</ul>


<p><strong>说明</strong></p>

<ul>
<li>免费应用托管平台：快速发布应用程序, 极大简化了应用内测过程。通过遍布全国数十家CDN加速节点，提供飞一般的下载速度！</li>
<li>iOS应用企业签名：为iOS应用提供企业签名发布功能。开发者无需拥有299$的企业账号，也可以获得企业签名功能。企业签名的应用，可以直接被所有iOS设备安装。免越狱，免AppStore！</li>
<li>支持iOS和Android应用：无论是Android还是iOS的应用，上传到蒲公英后，瞬间即可生成安装页面</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS真机调试]]></title>
    <link href="http://zhouhongmeiblog.github.io/blog/2014/07/02/ioszhen-ji-diao-shi/"/>
    <updated>2014-07-02T09:15:48+08:00</updated>
    <id>http://zhouhongmeiblog.github.io/blog/2014/07/02/ioszhen-ji-diao-shi</id>
    <content type="html"><![CDATA[<p><img src="/images/2014/07/02/zhenjicheshi.gif" alt="image" /></p>

<!--more-->


<h1>准备工作</h1>

<h5>苹果真机调试需要证书（<strong>Certificates</strong>）和描述文件（<strong>Provisioning Profiles</strong>）</h5>

<ol>
<li>证书（<strong>Certificates</strong>）: 通过苹果系统自带的<strong>钥匙串</strong>生成后上传到<strong>Developer</strong>中在生成来完成</li>
<li><p>描述文件（<strong>Provisioning Profiles</strong>）生成描述文件时需要选择App ID、证书（<strong>Certificates</strong>）、 设备（<strong>Devices</strong>）</p>

<pre><code>App ID 包含Bundle，必须与你程序的bundle保持一致，为了能同时调试多个程序，一般bundle填写时末尾*用号代替
App ID,证书,描述文件,设备,以及你所要调试程序的Bundle Identifier保持一致
</code></pre></li>
</ol>


<h5>进入申请界面</h5>

<p>打开<a href="https://developer.apple.com/devcenter/ios/index.action">iOS Dev Center</a>,选择Sign in，登陆（至少99美元账号），登陆之后在网页右边找到iOS Developer Program,选择Certificates，Identifiers &amp; Profiles，选择Identifiers</p>

<p><img src="/images/2014/07/02/1.png" alt="image" /></p>

<h5>添加App ID</h5>

<p>选择Identifiers->App IDs,在右侧选择添加按钮添加</p>

<p><img src="/images/2014/07/02/2.png" alt="image" /></p>

<p>App ID由用.符号分开的两部分组成，在默认情况下，App ID的前缀为你的团队ID，后缀被定义为一个bundle ID的搜索字符串，AppID的每一个部分对你的应用程序都有不同而且很重要的用途</p>

<ul>
<li>App ID Description：这部分只是你ID的一个代号，只需填写一个自己能分辨的名称即可，在后面申请证书和描述文件中会涉及到选择项</li>
</ul>


<p><img src="/images/2014/07/02/3.png" alt="image" /></p>

<ul>
<li>App ID Prefix：这部分是Team ID，系统默认，无需填写</li>
<li><p>App ID Suffix：这部分是App ID后缀，可选择Explicit App ID或者Wildcard App ID</p>

<ul>
<li>Explicit App ID</li>
</ul>


<p>Explicit App ID：如果你打算将应用程序中加入Game Center，或在应用中使用应用内购买，进行数据保护，使用iCloud，或者想要给你的应用程序一个唯一的配置文件，你就必须申请Explicit App ID。</p>

<p>要创建Explicit App ID，在下面的框中输入一个唯一的字符串，这个字符串必须与你的应用程序的Bundle ID匹配，苹果推荐使用 com.你的公司名称.app名称作为你的Bundle ID，如果是选择Explicit App ID，Bundle ID中 不能含有*号</p>

<p><img src="/images/2014/07/02/4.png" alt="image" /></p>

<ul>
<li>Wildcard App ID：通用App ID，只需使用com.oschina.*的格式即可匹配多个应用，本文以通用型为例</li>
</ul>


<p>Wildcard App ID：可以让你用一个App ID来匹配多个App，想要创建一个通用App ID，在输入Bundle ID末尾使用*号</p>

<p><img src="/images/2014/07/02/5.png" alt="image" /></p></li>
<li><p>App Services：应用程序提供的服务</p>

<p>App Services：选择你应用中将会使用的服务，在App ID注册成功之后也可再次编辑你的选择在自己应用中所使用到的选项上打√，因为我选择的是通用型（WildCard)，所以Game Center，In-App Purchase， Push Notifications都是不可选的，如果要使用这些功能，请选择精确型(Explicit)</p>

<p><img src="/images/2014/07/02/6.png" alt="image" /></p></li>
</ul>


<p>完成上面的填写之后，选择Continue</p>

<ul>
<li><p>确认信息</p>

<p><img src="/images/2014/07/02/7.png" alt="image" /></p>

<p>确认之后选择Submit，出现Registration complete.的字样，选择Done即可</p></li>
</ul>


<h4>添加设备（Devices）</h4>

<ul>
<li>将设备连上电脑，打开在XCode的Organizer->Devices中</li>
</ul>

]]></content>
  </entry>
  
</feed>
