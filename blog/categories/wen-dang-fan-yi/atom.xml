<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 文档翻译 | Mae Blog]]></title>
  <link href="http://zhouhongmeiblog.github.io/blog/categories/wen-dang-fan-yi/atom.xml" rel="self"/>
  <link href="http://zhouhongmeiblog.github.io/"/>
  <updated>2014-08-29T09:38:13+08:00</updated>
  <id>http://zhouhongmeiblog.github.io/</id>
  <author>
    <name><![CDATA[maebook]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitBook]]></title>
    <link href="http://zhouhongmeiblog.github.io/blog/2014/06/30/gitbook/"/>
    <updated>2014-06-30T15:10:45+08:00</updated>
    <id>http://zhouhongmeiblog.github.io/blog/2014/06/30/gitbook</id>
    <content type="html"><![CDATA[<p><img src="/images/2014/06/30/gitbook.png" alt="image" /></p>

<!--more-->


<h1>序言</h1>

<h2>文档</h2>

<p>这本书包含GitBook和GitBook.io整个文档。在GitHub允许你改进这个文档。</p>

<p>GitBook是一个工具来构建好的书同时也克使用Git和markdown。你的书可以生成多种格式:</p>

<ul>
<li><strong>Static Website</strong> :这是默认格式,它生成一个完整的交互式静态网站</li>
<li><strong>PDF</strong> :一个完整的PDF和书后的练习解答</li>
<li><strong>eBook</strong> :一个完整的PDF和书后的练习解答</li>
</ul>


<p>GitBook是开放源代码的,完全免费,工具的源代码可以在GitHub上。</p>

<h2>需要帮助</h2>

<p>我们总是乐意帮忙你的书或其他任何你可能有问题。你可以问一个问题或发表在GitHub问题上一个问题或通过电子邮件与我们联系:contact@gitbook.io。</p>

<h1>编辑器</h1>

<h2>桌面编辑器</h2>

<p>一个用于桌面编辑器。它是开放源代码的,可以在GitHub的源代码。</p>

<p><img src="/images/2014/06/30/editor.png" alt="image" /></p>

<h2>下载</h2>

<p>这些平台的编辑器可以下载：</p>

<ul>
<li>Windows</li>
<li>Mac OS</li>
<li>Linux 32bits</li>
<li>Linux 64bits</li>
</ul>


<h2>关联你的GitBook.io账户</h2>

<p>你可以容易连接GitBook.io账户通过在身份对话框中输入您的用户名和密码的身份验证对话框:</p>

<p><img src="/images/2014/06/30/editor.png" alt="image" /></p>

<h1>格式</h1>

<p>GitBook的使用规范是在基于markdown文件。
一本书是一个Git存储库包含至少2文件:README.md和SUMMARY.md</p>

<h3>README.md</h3>

<p>通常情况下,这应该是你的书的介绍。它自动会被添加到最后的总结中。</p>

<h3>SUMMARY.md</h3>

<p>这个SUMMARY.md定义你的书结构。它应该包含一个章节列表,链接到各自的页面。</p>

<p>例子：</p>

<pre><code>* [English](en/)
* [French](fr/)
* [Español](es/)
</code></pre>

<p>文件不包含在SUMMARY.md中将不会被gitbook处理。</p>

<h2>多语言</h2>

<p>GitBook支持用多种语言编写的书籍。在标准GitBook格式下，每种语言应该是子目录和一个文件命名为LANGS.md应该出现在库的根目录中使用以下格式:</p>

<pre><code># Summary
This is the summary of my book.
* [section 1](section1/README.md)    
    * [example 1](section1/example1.md)    
    * [example 2](section1/example2.md)
* [section 2](section2/README.md)    
    * [example 1](section2/example1.md)
</code></pre>

<p>你可以看到一个完整的示例通过 Learn Git书。</p>

<h2>忽略文件和文件夹</h2>

<p>GitBook 将阅读.gitignore .bookignore和.ignore 文件，跳过文件和文件夹的列表。(这些文件的格式,和.gitignore一样遵循相同的规范)</p>

<h1>发表内容</h1>

<p> 当你的书是gitbook.io创建的,你需要发表一些内容。</p>

<h2>使用编辑器</h2>

<p>如果你还没有编辑器,<a href="http://help.gitbook.io/editor/README.html">免费安装</a>。</p>

<p>连接你的GitBook.io账户编辑器。您可以使用菜单<code>Book &gt;Publish</code> 去更新你的书的内容。</p>

<p><img src="/images/2014/06/30/publish.png" alt="image" /></p>

<h2>使用Git</h2>

<p>你可以使用git去发表和更新你的书</p>

<pre><code>$ git push https://push.gitbook.io//.git
</code></pre>

<p>它将会提示你的用户名(用户名或者邮件)和密码(密码或者api token)</p>

<h2>下一步</h2>

<p>一旦你把内容发布到GitBook.io,您需要检查您的构建的状态。</p>

<p><strong><a href="http://help.gitbook.io/book/build.html">了解更多</a></strong></p>

<h1>构建</h1>

<p>通过使用<strong>git</strong>或者<strong>编辑器</strong>发布内容后,GitBook.io将开始不同的构建:</p>

<ul>
<li><strong>website</strong>:它将生成的网站</li>
<li><strong>json</strong>:它将提取关于这本书的元数据(摘要、介绍…)</li>
<li><strong>epub</strong>:它将生成epub下载</li>
<li><strong>pdf</strong>:它将生成pdf下载</li>
</ul>


<h2>构建列表</h2>

<p>你书中<strong>活动选项卡</strong>让你遵循构建的演变</p>

<p><img src="/images/2014/06/30/activity.png" alt="image" /></p>

<h2>构建细节</h2>

<p>当点击构建连接“logs”，你可以访问一个细节页面。本页面将会让你看到构建过程的输出。</p>

<p><img src="/images/2014/06/30/build.png" alt="image" /></p>

<h2>修正错误</h2>

<p>如果构建失败,您可以使用日志来调试这个问题和发布一个确定的内容。</p>

<p><strong><a href="http://help.gitbook.io/book/errors.html">了解更多关于常见错误</a></strong></p>

<h1>常见错误</h1>

<p>这是一个常见构建错误列表</p>

<hr />

<pre><code>Error loading plugins: plugin1, ...
</code></pre>

<p>这个错误是发生因为Gitbook不能解决一个插件(或插件是无效的)。外部插件需要被指定到node.js 依赖字段中package.json文件。了解更多关于package.json格式。</p>

<p>例如,如果你的书依赖于Autocover插件,您需要一个package.json文件包含以下内容:</p>

<pre><code>{
    "name": "mybook",
    "version": "0.0.0",
    "description": "",
    "repository": {
        "type": "git",
    "url": "https://github.com/Me/mybook.git"
      },
    "author": "Me &lt;me@gmail.com&gt;",
    "dependencies": {
    "gitbook-plugin-autocover": "0.0.5"
    }
}
</code></pre>

<h1>封面</h1>

<p>为了让你的书在GitBook.io更加优雅，你可以指定一个封面。</p>

<p>一个封面被指定是<strong>cover.jpg</strong>文件，一个<strong>cover_small.jpg</strong>也可以存在作为一个封面更小的版本。封面应该是一个<strong>JPEG</strong>文件。</p>

<h2>合适大小</h2>

<table class="table table-bordered table-striped table-condensed">
<tr>
<td></td>
<td>Big</td>
<td>Small</td>
</tr>
<tr>
<td>File</td>
<td>cover.jpg</td>
<td>cover_small.jpg</td>
</tr>
<tr>
<td>Size</td>
<td>1800x2360</td>
<td>200x262</td>
</tr>
</table>


<h2>自动封面</h2>

<p>GitBook插件(autocover)也可以用来生成一个封面文件,或者只是生成cover_small.jpg从你大的封面。</p>

<p><strong><a href="https://github.com/GitbookIO/plugin-autocover">了解更多的自动封面</a></strong></p>

<h2>指南</h2>

<p>一个好的封面遵守一下指南：</p>

<ul>
<li>没有边框</li>
<li>清晰可见的文本标题</li>
<li>在小版本上重要文本也可见</li>
</ul>


<h1>定制域名</h1>

<p>在<strong>Gitbook.io</strong>上所有的书可以通过<a href="http://.gitbooks.io/{book}/">http://.gitbooks.io/{book}/</a>.链接地址访问</p>

<p>不过你也能配置你的书使用一个自定制的域名（一个免费功能在GitBook.io）</p>

<p>添加一个自定制域名的书过程是很容易的。</p>

<ol>
<li>添加你的域名在你的书中设置.为了使用您自己的域名,你需要改变你的域名注册:</li>
<li>登录到你的域名注册和找允许您添加/编辑主机记录部分,经常发现在设置菜单“编辑DNS”,“主机记录”或“区域文件控制”。</li>
<li>设置www记录一个CNAME和URL字段设置为:www.gitbook.io。</li>
<li>把naked域(yourdomain.com)重定向到www.yourdomain.com,把这个选择指向这个域名。这通常被发现在“转发”,“URL转发”或“URL重定向”。</li>
</ol>


<p>可能需要几个小时为域名的变化。检查是否准备好或设置与GitBook定制域,输入您的域名(包括www)如下:</p>

<h1>可见性</h1>

<h2>公共/私人</h2>

<p>你的书可以<strong>公共</strong>或<strong>私人</strong>。公共图书对每个人都可见但只有collaborators 可以更新它。私人书籍只对collaborators可见。
　　
你可以把你的书从公共转换私人和从私人到公共。</p>

<h2>支付书</h2>

<p>书籍只能公共支付。</p>

<h2>Home /探索页面</h2>

<p>首页和探索页面包含书列表已经成功建造。我们建议设置封面图片。</p>

<h1>练习和测试</h1>

<h2>练习</h2>

<p>一本书可以包含互动练习(目前只在Javascript)。是一个代码的挑战提供给读者的练习,这是给定一个代码编辑器编写解决方案,检查对这本书作者的验证代码。</p>

<p>一个练习由4部分组成：</p>

<ul>
<li>练习<strong>留言</strong>/目标(在markdown/文本)</li>
<li><strong>初始代</strong>码显示给用户,提供一个起点</li>
<li><strong>解决方案</strong>的代码,是一个正确的解决方案</li>
<li><strong>验证</strong>代码,测试用户的输入的正确性</li>
</ul>


<p>练习需要开始和完成带有分隔标识(<code>——</code>或<code>* * *</code>)。它应该包含3代码元素(<strong>基地</strong>,<strong>解决方案</strong>和<strong>验证</strong>)。它可以包含第4元素来提供<strong>上下文</strong>代码(函数,导入库等…不应该显示给用户)。</p>

<pre><code>---

Define a variable `x` equal to 10.

```js
var x =
```

```js
var x = 10;
```

```js
assert(x == 10);
```

```js
// This is context code available everywhere
// The user will be able to call magicFunc in his codefunction magicFunc() {  
  return 3;
  }```

  ---
</code></pre>

<p>它将显示如下：</p>

<p><img src="/images/2014/06/30/new.png" alt="image" /></p>

<h2>测验</h2>

<p>一本书可以包含互动测验
在和练习的相同方式下测验也可以被定义</p>

<pre><code>---

Here is the introduction for the quiz

This is Question 1:
- [x] This is the proposition 1 (the correct one)
- [ ] This is the proposition 2

&gt; This is a help message when the answer to question 1 is wrong

This is Question 2:
- [ ] This is the proposition 1
- [x] This is the proposition 2 (correct)
- [x] This is the proposition 3 (correct)

&gt; This is a help message when the answer to question 2 is wrong

---
</code></pre>

<p>它将显示如下：</p>

<p><img src="/images/2014/06/30/result.png" alt="image" /></p>

<h1>谷歌Authorship</h1>

<p>使用Authorship能提高书籍的搜索结果。
　　
GitBook链接到谷歌作者必须先登录或创建一个Google +概要。
　　</p>

<ul>
<li>连接你的Google帐户<a href="https://www.gitbook.io/settings">设置</a>。</li>
<li>进入关于你G +的页面。</li>
<li>发现底部的“链接”章节。</li>
<li>在章节“链接”有三个选项。“其他配置文件”、“贡献者”,和“链接”。</li>
<li>点击“添加自定义链接”的“贡献者”一节&amp;命名为“GitBook”“标签”字段</li>
<li>Gitbook概要文件的URL添加到URL字段(<a href="https://www.gitbook.io/@twitter_username">https://www.gitbook.io/@twitter_username</a>)</li>
<li>点击保存并返回你的G +概要文件</li>
</ul>

]]></content>
  </entry>
  
</feed>
